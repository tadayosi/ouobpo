<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesource.org/schema/mule/core/2.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:file="http://www.mulesource.org/schema/mule/file/2.2" xmlns:jdbc="http://www.mulesource.org/schema/mule/jdbc/2.2"
  xmlns:spring="http://www.springframework.org/schema/beans"
  xsi:schemaLocation="
    http://www.mulesource.org/schema/mule/core/2.2
    http://www.mulesource.org/schema/mule/core/2.2/mule.xsd
    http://www.mulesource.org/schema/mule/file/2.2
    http://www.mulesource.org/schema/mule/file/2.2/mule-file.xsd
    http://www.mulesource.org/schema/mule/jdbc/2.2
    http://www.mulesource.org/schema/mule/jdbc/2.2/mule-jdbc.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
  ">

  <description>ファイル → JDBC</description>

  <spring:beans>
    <spring:import resource="classpath:beans.xml" />
  </spring:beans>

  <file:connector name="fileConnector" streaming="false"
    pollingFrequency="3000">
    <file:expression-filename-parser />
  </file:connector>

  <jdbc:connector name="jdbcConnector" dataSource-ref="dataSource">
    <jdbc:query key="insertData"
      value="
        insert into data (
          filename,
          content,
          timestamp
        ) values (
          #[header:originalFilename],
          #[mule:message.payload],
          #[function:dateStamp:yyyy-MM-dd HH:mm:ss]
        )
        " />
  </jdbc:connector>

  <model name="FileToJdbcModel">
    <service name="FileToJdbcService">

      <inbound>
        <file:inbound-endpoint path="target/in">
          <file:filename-wildcard-filter pattern="*.txt" />
          <byte-array-to-string-transformer />
        </file:inbound-endpoint>
      </inbound>

      <outbound>
        <pass-through-router>
          <jdbc:outbound-endpoint queryKey="insertData">
            <jdbc:transaction action="ALWAYS_BEGIN" />
          </jdbc:outbound-endpoint>
        </pass-through-router>
      </outbound>

    </service>
  </model>


</mule>
